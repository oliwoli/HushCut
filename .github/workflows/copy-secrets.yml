name: Copy secrets to public repo

on:
  workflow_dispatch:

jobs:
  copy-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Copy apple secrets to public repo
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_SECRETS }}
          TARGET_REPO: oliwoli/hushcut-releases
        run: |
          # Function to update a secret in the target repo
          set_secret () {
            local name=$1
            local value=$2
            # GitHub API requires encrypting secrets before sending
            # First get the public key for the repo
            pubkey=$(curl -s -H "Authorization: token $GH_TOKEN" \
              https://api.github.com/repos/$TARGET_REPO/actions/secrets/public-key)
            key_id=$(echo "$pubkey" | jq -r .key_id)
            key=$(echo "$pubkey" | jq -r .key)

            # Encrypt the secret using the repo's public key
            encrypted=$(echo -n "$value" | openssl pkeyutl -encrypt \
              -pubin -inkey <(echo "$key" | base64 -d) -pkeyopt rsa_padding_mode:oaep \
              -pkeyopt rsa_oaep_md:sha256 | base64)

            # Send it to GitHub
            curl -s -X PUT -H "Authorization: token $GH_TOKEN" \
              -H "Content-Type: application/json" \
              https://api.github.com/repos/$TARGET_REPO/actions/secrets/$name \
              -d "{\"encrypted_value\":\"$encrypted\",\"key_id\":\"$key_id\"}"
          }

          # Copy each secret
          set_secret "APPLE_ID_USERNAME" "${{ secrets.APPLE_ID_USERNAME }}"
          set_secret "APPLE_ID_APP_SPECIFIC_PASSWORD" "${{ secrets.APPLE_ID_APP_SPECIFIC_PASSWORD }}"
          set_secret "APPLE_TEAM_ID" "${{ secrets.APPLE_TEAM_ID }}"
          set_secret "APPLE_DEVELOPER_CERTIFICATE_P12_BASE64" "${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}"
          set_secret "APPLE_DEVELOPER_CERTIFICATE_PASSWORD" "${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}"