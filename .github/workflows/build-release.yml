name: Build and optionally make Release

on:
  push:
    branches:
      - '**'
    tags:
      - '*'

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/amd64
            ext: ''
            label: linux
          - os: windows-latest
            platform: windows/amd64
            ext: .exe
            label: windows
          - os: macos-latest
            platform: darwin/universal
            ext: ''
            label: macos

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Print Git ref
        run: echo "Ref is $GITHUB_REF"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r python-backend/requirements.txt
          python -m pip install pyinstaller

      - name: Build Python backend
        run: |
          pyinstaller python-backend/src/HushCut.py --name python_backend -y
          mkdir -p build/bin
          cp dist/python_backend/python_backend${{ matrix.ext }} build/bin/python_backend${{ matrix.ext }}
          if [ -d dist/python_backend/_internal ]; then
            cp -r dist/python_backend/_internal build/bin/
          fi
          rm -rf dist build/python_backend

      - name: Copy Lua script
        run: cp python-backend/src/HushCut.lua build/bin/

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Build Wails frontend
        uses: dAppServer/wails-build-action@6f01580fdf9e01042bcf2ebe288a934e0d6eb4e2
        with:
          build-name: HushCut
          build-platform: ${{ matrix.platform }}
          package: false

      - name: Move binaries to macOS Resources folder
        if: matrix.label == 'macos'
        run: |
          RESOURCE_DIR="build/bin/HushCut.app/Contents/Resources"
          mkdir -p "$RESOURCE_DIR"
          mv -v build/bin/python_backend "$RESOURCE_DIR/"
          mv -v build/bin/HushCut.lua "$RESOURCE_DIR/"

      - name: Zip bin folder
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            powershell -Command "Compress-Archive -Path build/bin/* -DestinationPath HushCut-${{ github.ref_name }}-${{ matrix.label }}.zip"
          else
            zip -r HushCut-${{ github.ref_name }}-${{ matrix.label }}.zip build/bin
          fi

      - name: Upload artifact
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: HushCut-${{ github.ref_name }}-${{ matrix.label }}
          path: HushCut-${{ github.ref_name }}-${{ matrix.label }}.zip

  upload-release-assets:
    env:
      IS_TAG: ${{ startsWith(github.ref, 'refs/tags/') }}
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Display downloaded files
        run: ls -R artifacts

      - name: Upload to Dropbox
        run: |
          for f in artifacts/*.zip; do
            echo "Uploading $f to Dropbox..."
            curl -X POST https://content.dropboxapi.com/2/files/upload \
              --header "Authorization: Bearer ${{ secrets.DROPBOX_ACCESS_TOKEN }}" \
              --header "Dropbox-API-Arg: {\"path\": \"/releases/${f##*/}\",\"mode\": \"add\",\"autorename\": true,\"mute\": false}" \
              --header "Content-Type: application/octet-stream" \
              --data-binary @"$f"
          done
