name: Test Build (No upload)

on:
  push:
    branches:
      - main
  pull_request:

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/amd64
            ext: ''
          - os: windows-latest
            platform: windows/amd64
            ext: .exe
          - os: macos-latest
            platform: darwin/universal
            ext: ''

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Enable MSVC
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      # Windows-only: Install CMake and Ninja
      - name: Install CMake and Ninja (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --yes
          choco install ninja --yes

      # Windows-only: Shorten TEMP path
      - name: Shorten TEMP path
        if: matrix.os == 'windows-latest'
        run: |
          mkdir C:\tmp
          echo "TEMP=C:\tmp" >> $env:GITHUB_ENV
          echo "TMP=C:\tmp" >> $env:GITHUB_ENV

      - name: Setup MSVC environment
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: install opentimelineio
        if: matrix.os == 'windows-latest'
        run: |
          pip install --config-settings="cmake.args=-DCMAKE_BUILD_TYPE=Release -DPython3_DEBUG=OFF" opentimelineio


      - name: Install Python deps
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -r python-backend/requirements.txt
          pip install pyinstaller

      - name: Build Python backend
        run: |
          pyinstaller python-backend/main.spec -y
          mkdir -p build/bin
          cp dist/main/main${{ matrix.ext }} build/bin/python_backend${{ matrix.ext }}
          if [ -d dist/main/_internal ]; then
            cp -r dist/main/_internal build/bin/
          fi
          rm -rf dist build/main
        shell: bash

      - name: Install pnpm
        run: npm install -g pnpm
      
      - name: Build Wails frontend
        uses: dAppServer/wails-build-action@6f01580fdf9e01042bcf2ebe288a934e0d6eb4e2
        with:
          build-name: pruner
          build-platform: ${{ matrix.platform }}
          package: false
          go-version: '1.22'
